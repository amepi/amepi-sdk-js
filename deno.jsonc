{
  "tasks": {
    "dev": "deno run -A --unstable-hmr main.ts",
    "test": "deno test",
    "coverage:collect": "deno test --coverage",
    "coverage": "deno coverage",
    "coverage:html": "deno coverage --html",
    "coverage:clear": "rm -rf coverage",
    "doc:html": "deno doc --html",
    "cache:reload": "deno cache --reload --lock=deno.lock --lock-write deps.ts",
    "prisma:introspect": "deno run -A npm:prisma db pull",
    "prisma:client": "deno run -A --unstable npm:prisma generate",
    "prisma:clear-client": "rm -rf generated", // clear prisma client generation output
    "prisma:studio": "deno run -A npm:prisma studio",
    "bws:secrets": "bws secret list", 
    "env:setup": "cp .env.example .env && code .env",
    "dnt": "deno run -A scripts/build_npm.ts",
    "dnt:clear": "rm -rf npm", // clear dnt script output directory,
    "vendor": "deno vendor main.ts",
    "vendor:clear": "rm -rf vendor", // clear vendor command output directory,
    "clear": "deno task prisma:clear-client && deno task dnt:clear && deno task vendor:clear && deno task coverage:clear", // clear all output directories,
    "node:clear": "rm -rf node_modules package.json package-lock.json",
    "publish:npm": "npm publish /npm",
    "publish:github": "echo wip",
    "publish:deno": "echo wip"
  }
}
